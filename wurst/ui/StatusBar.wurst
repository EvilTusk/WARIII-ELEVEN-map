package StatusBar

import DzFrame
import HeroBase
import TimerUtils

public class StatusBarStruct
    static thistype instance
    private Backdrop hpBarBack
    private Backdrop mpBarBack
    private Text hpText
    private Text mpText
    private Text hpRevText
    private Text mpRevText
    private Text adText
    private Text apText
    private Text arText
    private Text mrText
    private Text asText
    private Text msText
    private Backdrop heroIcon
    private Backdrop pIcon
    private Backdrop qIcon
    private Backdrop wIcon
    private Backdrop eIcon
    private Backdrop rIcon
    private HeroBase objHero

    construct(HeroBase objHero)
        instance = this

        this.objHero = objHero

    function show()
        let gameUI = Frame.getGetGameUI()

        // 地图
        let mapBack = new Frame("MapBack", gameUI, 0)
        ..setPoint(FrameAnchorPoint.BOTTOMRIGHT, gameUI, FrameAnchorPoint.BOTTOMRIGHT, -0.004, 0.004)
        ..setSize(0.12, 0.16)
        destroy Frame.getMinimap()..show(true)
        ..clearAllPoints()
        ..setPoint(FrameAnchorPoint.BOTTOMRIGHT, mapBack, FrameAnchorPoint.BOTTOMRIGHT, -0.004, 0.004)
        ..setPoint(FrameAnchorPoint.TOPLEFT, mapBack, FrameAnchorPoint.TOPLEFT, 0.004, -0.004)

        let heroStatusBack = new Frame("HeroStatusBack", gameUI, 0) castTo Backdrop
        heroStatusBack..setPoint(FrameAnchorPoint.BOTTOM, gameUI, FrameAnchorPoint.BOTTOM, 0., 0.0003)

        heroIcon = heroStatusBack.findByName("HeroIcon", 0) castTo Backdrop
        heroIcon.setTexture(objHero.heroIconG, 0)

        adText = heroStatusBack.findByName("AdText", 0) castTo Text
        apText = heroStatusBack.findByName("ApText", 0) castTo Text
        arText = heroStatusBack.findByName("ArText", 0) castTo Text
        mrText = heroStatusBack.findByName("MrText", 0) castTo Text
        asText = heroStatusBack.findByName("AsText", 0) castTo Text
        msText = heroStatusBack.findByName("MsText", 0) castTo Text

        pIcon = heroStatusBack.findByName("PIcon", 0) castTo Backdrop
        pIcon.setTexture(objHero.cSkillIconP, 0)
        qIcon = heroStatusBack.findByName("QIcon", 0) castTo Backdrop
        qIcon.setTexture(objHero.cSkillIconQ, 0)
        wIcon = heroStatusBack.findByName("WIcon", 0) castTo Backdrop
        wIcon.setTexture(objHero.cSkillIconW, 0)
        eIcon = heroStatusBack.findByName("EIcon", 0) castTo Backdrop
        eIcon.setTexture(objHero.cSkillIconE, 0)
        rIcon = heroStatusBack.findByName("RIcon", 0) castTo Backdrop
        rIcon.setTexture(objHero.cSkillIconR, 0)

        hpBarBack = heroStatusBack.findByName("HpBarBack", 0) castTo Backdrop
        mpBarBack = heroStatusBack.findByName("MpBarBack", 0) castTo Backdrop
        hpText = heroStatusBack.findByName("HpBarText", 0) castTo Text
        mpText = heroStatusBack.findByName("MpBarText", 0) castTo Text
        hpRevText = heroStatusBack.findByName("HpBarRevText", 0) castTo Text
        mpRevText = heroStatusBack.findByName("MpBarRevText", 0) castTo Text

        let t = getTimer()
        ..startPeriodic(0.01, function syncHero)

        // pIcon = new Frame("BACKDROP", "pIcon", gameUI, "UI\\FrameDef\\Glue\\BattleNetTemplates.fdf", 0) castTo Backdrop
        // pIcon..show(true)
        // ..setTexture(objHero.cSkillIconP, 0)
        // ..setPoint(FrameAnchorPoint.TOPLEFT, heroIcon, FrameAnchorPoint.TOPRIGHT, 0.005, -0.005)
        // .setSize(0.015, 0.02)

        // qIcon = new Frame("BACKDROP", "qIcon", gameUI, "UI\\FrameDef\\Glue\\BattleNetTemplates.fdf", 0) castTo Backdrop
        // qIcon..show(true)
        // ..setTexture(objHero.cSkillIconQ, 0)
        // ..setPoint(FrameAnchorPoint.TOPLEFT, pIcon, FrameAnchorPoint.TOPRIGHT, 0.005, 0)
        // .setSize(0.015, 0.02)

        // wIcon = new Frame("BACKDROP", "wIcon", gameUI, "UI\\FrameDef\\Glue\\BattleNetTemplates.fdf", 0) castTo Backdrop
        // wIcon..show(true)
        // ..setTexture(objHero.cSkillIconW, 0)
        // ..setPoint(FrameAnchorPoint.TOPLEFT, qIcon, FrameAnchorPoint.TOPRIGHT, 0.005, 0)
        // .setSize(0.015, 0.02)

        // eIcon = new Frame("BACKDROP", "eIcon", gameUI, "UI\\FrameDef\\Glue\\BattleNetTemplates.fdf", 0) castTo Backdrop
        // eIcon..show(true)
        // ..setTexture(objHero.cSkillIconE, 0)
        // ..setPoint(FrameAnchorPoint.TOPLEFT, wIcon, FrameAnchorPoint.TOPRIGHT, 0.005, 0)
        // .setSize(0.015, 0.02)

        // rIcon = new Frame("BACKDROP", "rIcon", gameUI, "UI\\FrameDef\\Glue\\BattleNetTemplates.fdf", 0) castTo Backdrop
        // rIcon..show(true)
        // ..setTexture(objHero.cSkillIconR, 0)
        // ..setPoint(FrameAnchorPoint.TOPLEFT, eIcon, FrameAnchorPoint.TOPRIGHT, 0.005, 0)
        // .setSize(0.015, 0.02)


    static function syncHero()
        instance.hpText.setText(instance.objHero.cHP.toInt().toString() + "/" + instance.objHero.cHPMax.toInt().toString())
        instance.mpText.setText(instance.objHero.cMP.toInt().toString() + "/" + instance.objHero.cMPMax.toInt().toString())
        instance.hpRevText.setText("+" + instance.objHero.cRH.toString(1))
        instance.mpRevText.setText("+" + instance.objHero.cRM.toString(1))
        instance.adText.setText(instance.objHero.cAD.toInt().toString())
        instance.apText.setText(instance.objHero.cAP.toInt().toString())
        instance.arText.setText(instance.objHero.cAR.toInt().toString())
        instance.mrText.setText(instance.objHero.cMR.toInt().toString())
        instance.asText.setText(instance.objHero.cAS.toString(2))
        instance.msText.setText(instance.objHero.cMS.toInt().toString())
        instance.hpBarBack.setSize(0.136-instance.objHero.cHP/instance.objHero.cHPMax*0.136, 0.012)
        instance.mpBarBack.setSize(0.136-instance.objHero.cMP/instance.objHero.cMPMax*0.136, 0.012)

    

